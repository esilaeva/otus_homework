package webservicesserver;

import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;

/**
 * The Number Conversion Web Service, implemented with Visual DataFlex, provides functions that convert numbers into words or dollar amounts.
 *
 * This class was generated by Apache CXF 3.3.4
 * 2024-06-14T20:32:20.379+03:00
 * Generated source version: 3.3.4
 *
 */
@WebServiceClient(name = "NumberConversion",
                  wsdlLocation = "https://www.dataaccess.com/webservicesserver/numberconversion.wso?WSDL",
                  targetNamespace = "http://www.dataaccess.com/webservicesserver/")
public class NumberConversion extends Service {
    
  public final static URL WSDL_LOCATION;
    
  public final static QName SERVICE = new QName("http://www.dataaccess.com/webservicesserver/", "NumberConversion");
  public final static QName NUMBER_CONVERSION_SOAP = new QName("http://www.dataaccess.com/webservicesserver/", "NumberConversionSoap");
  public final static QName NUMBER_CONVERSION_SOAP_12 = new QName("http://www.dataaccess.com/webservicesserver/", "NumberConversionSoap12");
    
  static {
    URL url = null;
    try {
      url = new URL("https://www.dataaccess.com/webservicesserver/numberconversion.wso?WSDL");
    } catch (MalformedURLException e) {
      java.util.logging.Logger.getLogger(NumberConversion.class.getName())
          .log(java.util.logging.Level.INFO,
            "Can not initialize the default wsdl from {0}", "https://www.dataaccess.com/webservicesserver/numberconversion.wso?WSDL");
    }
    WSDL_LOCATION = url;
  }
    
  public NumberConversion(URL wsdlLocation) {
    super(wsdlLocation, SERVICE);
  }
    
  public NumberConversion(URL wsdlLocation, QName serviceName) {
    super(wsdlLocation, serviceName);
  }
    
  public NumberConversion() {
    super(WSDL_LOCATION, SERVICE);
  }
    
  public NumberConversion(WebServiceFeature... features) {
    super(WSDL_LOCATION, SERVICE, features);
  }
    
  public NumberConversion(URL wsdlLocation, WebServiceFeature... features) {
    super(wsdlLocation, SERVICE, features);
  }
    
  public NumberConversion(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
    super(wsdlLocation, serviceName, features);
  }
    

  /**
  *
  * @return
  *     returns NumberConversionSoapType
  */
  @WebEndpoint(name = "NumberConversionSoap")
  public NumberConversionSoapType getNumberConversionSoap() {
    return super.getPort(NUMBER_CONVERSION_SOAP, NumberConversionSoapType.class);
  }

  /**
   *
   * @param features
   *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
   * @return
   *     returns NumberConversionSoapType
   */
  @WebEndpoint(name = "NumberConversionSoap")
  public NumberConversionSoapType getNumberConversionSoap(WebServiceFeature... features) {
    return super.getPort(NUMBER_CONVERSION_SOAP, NumberConversionSoapType.class, features);
  }

    
  /**
   *
   * @return
   *     returns NumberConversionSoapType
   */
  @WebEndpoint(name = "NumberConversionSoap12")
  public NumberConversionSoapType getNumberConversionSoap12() {
    return super.getPort(NUMBER_CONVERSION_SOAP_12, NumberConversionSoapType.class);
  }

  /**
   *
   * @param features
   *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
   * @return
   *     returns NumberConversionSoapType
   */
  @WebEndpoint(name = "NumberConversionSoap12")
  public NumberConversionSoapType getNumberConversionSoap12(WebServiceFeature... features) {
    return super.getPort(NUMBER_CONVERSION_SOAP_12, NumberConversionSoapType.class, features);
  }
}
